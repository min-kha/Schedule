@page
@model        RankModel
@{
    ViewData["Title"] = $"Import File";
}
<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">

<p>Nhập lịch học từ file theo <a href="http://localhost:5215/templates/import-schedule-template.csv"><b>TEMPLATE</b></a>, hệ thống sẽ tự động tạo lịch học căn cứ theo CreditSlot trong môn học và ngày bắt đầu.</p>
<p>Hỗ trợ định dạng file: json, xml, csv</p>

<form method="post" enctype="multipart/form-data">
    <select class="form-control" asp-for="SubjectId" asp-items="Model.SelectSubjects" onchange="getClassrooms()">
        <option value="0">Vui lòng chọn môn học</option>
    </select>
    <div class="form-group">
        <label asp-for="Semester" class="control-label"></label>
        <input type="number" class="form-control" asp-for="Semester" onchange="getClassrooms()">
    </div>
    <i>Chọn môn học và kỳ để xem thông tin lớp học sẽ phân bổ tự động sinh viên</i>
    <table id="ClassroomTable" class="table table-striped" style="display: none;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Mã lớp</th>
                <th>Tên lớp</th>
                <th>Học kỳ</th>
                <th>Năm học</th>
            </tr>
        </thead>
        <tbody id="ClassroomTableBody">
        </tbody>
    </table>
    <div class="form-group">
        <label for="fileInput">Chọn file:</label>
        <input type="file" class="form-control-file" asp-for="FileInput">
    </div>
    <button type="submit" class="btn btn-primary">Upload</button>
</form>
@if (!string.IsNullOrEmpty(Model.StringMessage))
{
<div class="alert alert-success" role="alert">
    <h4 class="alert-heading">Thông báo</h4>
    <hr>
        <p class="mb-0">@Model.StringMessage</p>
</div>
}
@if (!ModelState.IsValid)
{
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">An error occurred!</h4>
        <p>@Html.ValidationSummary(false, "")</p>
        <hr>
        <p class="mb-0">Đã xảy ra lỗi khi nhập lịch trình. Vui lòng thử lại.</p>
    </div>
}

@section Scripts{
    <script>
        function getClassrooms() {
            var subjectId = document.getElementById('SubjectId').value;
            var semester = document.getElementById('Semester').value;

            if (subjectId != 0 && semester) {
                fetch(`https://localhost:7167/api/classrooms/subject?subjectId=${subjectId}&semester=${semester}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Lỗi khi lấy dữ liệu lớp học');
                        }
                        return response.json();
                    })
                    .then(data => {
                        updateClassroomTable(data);
                    })
                    .catch(error => {
                        console.error('Lỗi:', error);
                        alert('Có lỗi xảy ra khi lấy danh sách lớp học');
                    });
            }
        }

        function updateClassroomTable(classrooms) {
            var tableBody = document.getElementById('ClassroomTableBody');
            tableBody.innerHTML = ''; // Xóa nội dung cũ

            classrooms.forEach(classroom => {
                var row = tableBody.insertRow();
                row.insertCell(0).textContent = classroom.id;
                row.insertCell(1).textContent = classroom.code;
                row.insertCell(2).textContent = classroom.name;
                row.insertCell(3).textContent = classroom.semesters;
                row.insertCell(4).textContent = classroom.year;
            });

            // Hiển thị bảng nếu có dữ liệu
            document.getElementById('ClassroomTable').style.display = classrooms.length > 0 ? 'table' : 'none';
        }

    </script>
}